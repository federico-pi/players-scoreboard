{"ast":null,"code":"var _jsxFileName = \"/Users/Fred/Documents/github/players-scoreboard/src/components/Stopwatch.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isRunning: false,\n      elapsedTime: 0,\n      previousTime: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        const now = Date.now();\n        this.setState(prev => ({\n          previousTime: now,\n          elapsedTime: prev.elapsedTime + (now - this.state.previousTime)\n        }));\n      }\n    };\n\n    this.handleStopwatch = () => {\n      this.setState(prev => ({\n        isRunning: !prev.isRunning\n      }));\n\n      if (!this.state.isRunning) {\n        this.setState({\n          previousTime: Date.now()\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: Math.floor(this.state.elapsedTime / 1000) + '.' + Math.floor(this.state.elapsedTime / 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? 'Stop' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Fred/Documents/github/players-scoreboard/src/components/Stopwatch.js"],"names":["React","Component","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prev","handleStopwatch","componentDidMount","intervalID","setInterval","render","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACrCE,KADqC,GAC7B;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,WAAW,EAAE,CAFT;AAGJC,MAAAA,YAAY,EAAE;AAHV,KAD6B;;AAAA,SAWrCC,IAXqC,GAW9B,MAAM;AACT,UAAI,KAAKJ,KAAL,CAAWC,SAAf,EAA0B;AACtB,cAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,aAAKE,QAAL,CAAeC,IAAI,KAAK;AACpBL,UAAAA,YAAY,EAAEE,GADM;AAEpBH,UAAAA,WAAW,EAAEM,IAAI,CAACN,WAAL,IAAoBG,GAAG,GAAG,KAAKL,KAAL,CAAWG,YAArC;AAFO,SAAL,CAAnB;AAIH;AACJ,KAnBoC;;AAAA,SAqBrCM,eArBqC,GAqBnB,MAAM;AACpB,WAAKF,QAAL,CAAeC,IAAI,KAAK;AACpBP,QAAAA,SAAS,EAAE,CAACO,IAAI,CAACP;AADG,OAAL,CAAnB;;AAGA,UAAI,CAAC,KAAKD,KAAL,CAAWC,SAAhB,EAA2B;AACvB,aAAKM,QAAL,CAAc;AACVJ,UAAAA,YAAY,EAAEG,IAAI,CAACD,GAAL;AADJ,SAAd;AAGH;AACJ,KA9BoC;AAAA;;AAOrCK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKR,IAAL,EAAP,EAAoB,GAApB,CAA7B;AACH;;AAuBDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBACKC,IAAI,CAACC,KAAL,CAAW,KAAKf,KAAL,CAAWE,WAAX,GAAyB,IAApC,IAA4C,GAA5C,GAAkDY,IAAI,CAACC,KAAL,CAAW,KAAKf,KAAL,CAAWE,WAAX,GAAwB,EAAnC;AADvD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKO,eAAtB;AAAA,kBACK,KAAKT,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AADrC;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA7CoC","sourcesContent":["import React, {Component} from 'react';\n\nexport class Stopwatch extends Component {\n    state = {\n        isRunning: false,\n        elapsedTime: 0,\n        previousTime: 0\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(() => this.tick(), 100)\n    }\n\n    tick = () => {\n        if (this.state.isRunning) {\n            const now = Date.now();\n            this.setState( prev => ({\n                previousTime: now,\n                elapsedTime: prev.elapsedTime + (now - this.state.previousTime)\n            }))\n        }\n    }\n    \n    handleStopwatch = () => {\n        this.setState( prev => ({\n            isRunning: !prev.isRunning\n        }))\n        if (!this.state.isRunning) {\n            this.setState({\n                previousTime: Date.now()\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"stopwatch\">\n                <h2>Stopwatch</h2>\n                <span className=\"stopwatch-time\">\n                    {Math.floor(this.state.elapsedTime / 1000) + '.' + Math.floor(this.state.elapsedTime /10)}\n                </span>\n                <button onClick={this.handleStopwatch}>\n                    {this.state.isRunning ? 'Stop' : 'Start'}\n                </button> \n                <button>Reset</button>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}