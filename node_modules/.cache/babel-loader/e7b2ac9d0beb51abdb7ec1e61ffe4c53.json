{"ast":null,"code":"var _jsxFileName = \"/Users/Fred/Documents/github/players-scoreboard/src/components/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0\n    };\n\n    this.incrementScore = () => {\n      this.setState(prevState => ({\n        score: prevState.score + 1\n      }));\n    };\n\n    this.decrementScore = () => {\n      this.setState(prev => {\n        let currentScore = prev.score;\n\n        if (currentScore > 0) {\n          return {\n            score: currentScore - 1\n          };\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action decrement\",\n        onClick: this.decrementScore,\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter-score\",\n        children: this.state.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action increment\",\n        onClick: this.incrementScore,\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Player = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"player-name\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-player\",\n        onClick: () => props.removePlayer(props.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Player;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Guil\",\n        id: 1\n      }, {\n        name: \"Treasure\",\n        id: 2\n      }, {\n        name: \"Ashley\",\n        id: 3\n      }, {\n        name: \"James\",\n        id: 4\n      }]\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Scoreboard\",\n        totalPlayers: this.state.players.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), this.state.players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n        name: player.name,\n        id: player.id,\n        removePlayer: this.handleRemovePlayer\n      }, player.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/Fred/Documents/github/players-scoreboard/src/components/App.js"],"names":["React","Counter","Component","state","score","incrementScore","setState","prevState","decrementScore","prev","currentScore","render","Player","props","removePlayer","id","name","App","players","handleRemovePlayer","filter","p","length","map","player","toString"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Counter extends React.Component {\n  state = { \n    score: 0 \n  };\n  \n  incrementScore = () => {\n    this.setState( prevState => ({\n      score: prevState.score + 1\n    }));\n  }\n\n  decrementScore = () => {\n    this.setState( prev => {\n        let currentScore = prev.score;\n        if (currentScore > 0) {\n            return {\n                score: currentScore -1\n            }\n        }\n    })\n}\n\n  render() {\n    return (\n      <div className=\"counter\">\n        <button className=\"counter-action decrement\" onClick={this.decrementScore}> - </button>\n        <span className=\"counter-score\">{ this.state.score }</span>\n        <button className=\"counter-action increment\" onClick={this.incrementScore}> + </button>\n      </div>\n    );\n  }\n}\n  \nconst Player = (props) => {\n  return (\n    <div className=\"player\">\n      <span className=\"player-name\">\n        <button className=\"remove-player\" onClick={() => props.removePlayer(props.id)}>âœ–</button>\n        { props.name }\n      </span>\n\n      <Counter />\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    players: [\n      {\n        name: \"Guil\",\n        id: 1\n      },\n      {\n        name: \"Treasure\",\n        id: 2\n      },\n      {\n        name: \"Ashley\",\n        id: 3\n      },\n      {\n        name: \"James\",\n        id: 4\n      }\n    ]\n  };\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"scoreboard\">\n        <Header \n          title=\"Scoreboard\" \n          totalPlayers={this.state.players.length} \n        />\n  \n        {/* Players list */}\n        {this.state.players.map( player =>\n          <Player \n            name={player.name}\n            id={player.id}\n            key={player.id.toString()} \n            removePlayer={this.handleRemovePlayer}           \n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}