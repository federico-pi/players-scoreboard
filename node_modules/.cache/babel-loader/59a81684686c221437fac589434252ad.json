{"ast":null,"code":"var _jsxFileName = \"/Users/Fred/Documents/github/players-scoreboard/src/components/Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.incrementScore = () => {\n      this.setState(prevState => ({\n        score: prevState.score + 1\n      }));\n    };\n\n    this.decrementScore = () => {\n      this.setState(prev => {\n        let currentScore = prev.score;\n\n        if (currentScore > 0) {\n          return {\n            score: currentScore - 1\n          };\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action decrement\",\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter-score\",\n        children: this.props.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter-action increment\",\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/Fred/Documents/github/players-scoreboard/src/components/Counter.js"],"names":["React","Component","Counter","incrementScore","setState","prevState","score","decrementScore","prev","currentScore","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAE5BE,cAF4B,GAEX,MAAM;AACrB,WAAKC,QAAL,CAAeC,SAAS,KAAK;AAC3BC,QAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AADE,OAAL,CAAxB;AAGD,KAN2B;;AAAA,SAQ5BC,cAR4B,GAQX,MAAM;AACrB,WAAKH,QAAL,CAAeI,IAAI,IAAI;AACnB,YAAIC,YAAY,GAAGD,IAAI,CAACF,KAAxB;;AACA,YAAIG,YAAY,GAAG,CAAnB,EAAsB;AAClB,iBAAO;AACHH,YAAAA,KAAK,EAAEG,YAAY,GAAE;AADlB,WAAP;AAGH;AACJ,OAPD;AAQH,KAjB6B;AAAA;;AAmB5BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAkC,KAAKC,KAAL,CAAWL;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA3B2B;;AA8B9B,eAAeJ,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Counter extends Component {\n    \n    incrementScore = () => {\n      this.setState( prevState => ({\n        score: prevState.score + 1\n      }));\n    }\n  \n    decrementScore = () => {\n      this.setState( prev => {\n          let currentScore = prev.score;\n          if (currentScore > 0) {\n              return {\n                  score: currentScore -1\n              }\n          }\n      })\n  }\n  \n    render() {\n      return (\n        <div className=\"counter\">\n          <button className=\"counter-action decrement\"> - </button>\n          <span className=\"counter-score\">{ this.props.score }</span>\n          <button className=\"counter-action increment\"> + </button>\n        </div>\n      );\n    }\n  }\n\n  export default Counter;"]},"metadata":{},"sourceType":"module"}